---
apiVersion: v1
kind: Namespace
metadata:
  name: apps
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: apps
  name: bloomlessons
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: bloomlessons
      profile: apps
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bloomlessons
        profile: apps
    spec:
      containers:
      - image: briancollins081/sample-nextjs-app:v1.0.2
        imagePullPolicy: Always
        name: apps
        ports:
        - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  namespace: apps
  name: bloomlessons
spec:
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: bloomlessons
    profile: apps
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: apps
  name: bloomlessons
  annotations:
    # kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/group.name: bloomlessons-fargate
    # the default for our case value (The number can be 1-1000. The lowest number for all ingresses in the same ingress group is evaluated first)
    alb.ingress.kubernetes.io/group.order: '1'
    # redirection
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:YOURAWSREGION:YOURAWSACCOUNTID:certificate/YOURACMCERTIFICATEID"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  ingressClassName: alb
  rules:
    - host: bloom.kubernetes.YOURDOMAIN.COM # can be any domain .tech, .co.ke, .org etc as long as you have access to manage it
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: bloomlessons
              port:
                number: 80